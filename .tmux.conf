#
# SHORTCUTS
#

##############
# C-a         Shortcuts under the CTRL-a (preffix) namespace.
##############
# I           Fetch TPM plugins.
# f           Prompt to search for text in open windows.
# #           List all paste buffers.
# -           Delete the most recently copied buffer of text.
# =           Choose which buffer to paste interactively from a list.
#
# |           Vertical window split.
# -           Horizontal window split.
# ,           Rename the current window.
# '           Prompt for a window index to select.
# .           Prompt for an index to move the current window.
# 0 to 9      Select windows 0 to 9.
# &           Kill the current window.
# l           Move to the previously selected window.
# n           Change to the next window.
# p           Change to the previous window.
# w           Choose the current window interactively.
# m-<Number>  Swap current window with windows number <Number>.
#
# ;           Move to the previously active pane.
# o           Select the next pane in the current window.
# x           Kill the current pane.
# {           Swap the current pane with the previous pane.
# }           Swap the current pane with the next pane.
# !           Break the current pane out of the window.
# "           Split the current pane into two, top and bottom.
# %           Split the current pane into two, left and right.
#
# C-o         Rotate the panes in the current window forwards,
#             change to the pane above, below, left, or right of the current pane.
# M-1 to M-5  Arrange panes in one of the five preset layouts:
#             even-horizontal/vertical, main-horizontal/vertical or tiled.
# C-↑, C-↓    Resize the current pane in steps of one cell.
# C-←, C-→    Resize the current pane in steps of one cell.
# q           Briefly display pane indexes.
# M-o         Rotate the panes in the current window backwards.
#
# :           Enter the tmux command prompt.
# ?           List all key bindings.
#
# C-z         Suspend the tmux client.
# $           Rename the current session.
# s           Select a new session for the attached client interactively.
# L           Switch the attached client back to the last session.
# d           Detach the current client.
# D           Choose a client to detach.
# R           Reload tmux configuration file.
#
# t           Show the time.
# ~           Show previous messages from tmux, if any.
#
# C-s         Save tmux session (depends on tmux-resurrect plugin)
# C-r         Reload previous tmux session (depends on tmux-resurrect plugin)
##############
# Alt-?       Shortcuts under the Alt key namespace.
##############
# ←           Select pane on left.
# →           Select pane on right.
# ↓           Select pane on bottom.
# ↑           Select pane on top.
##############
# C-?         Shortcuts under the Ctrl key namespace.
##############
# h           Select pane on left (vim mode).
# l           Select pane on right (vim mode).
# j           Select pane on bottom (vim mode).
# k           Select pane on top (vim mode).
#
# !           Clear screen.
##############
# Copy Mode   Shortcuts that apply to Vim-like copy mode.
##############
# prefix + c  Enter copy mode.
# v           Start visual selection.
# h/l/j/k     Select text left/right/down/up while on visual selection.
# y/Enter     Copy selection to system clipboard (depends on tmux-yank plugin).
# Y           Copy selection and paste to terminal (depends on tmux-yank plugin).
# Alt-y       Copy selection to clipboard and paste to terminal (depends on tmux-yank plugin).
# p           Paste buffer.
# +           Delete buffer.
# o           Open a selection with the system default program (depends on tmux-open plugin).
# Ctrl-o      Open a selection with the $EDITOR (depends on tmux-open plugin).

#
# COMMANDS
#

# To create a new tmux session, run:
# $ tmux new -s <SESSION_NAME>
#
# To attach a particular existing tmux session, run:
# $ tmux attach -t <SESSION_NAME>
#
# To switch to an existing session, run:
# $ tmux switch -t <SESSION_NAME>
#
# To list existing tmux sessions, run:
# $ tmux ls

#
# SETTINGS
#

# Load OS specific settings
if-shell 'test "$(uname -s)" = "Darwin"' 'source ~/.tmux-osx.conf'
if-shell 'test "$(uname -s)" = "Linux"' 'source ~/.tmux-linux.conf'

# Focus events enabled for terminals that support them
set -g focus-events on

# Tmux messages are displayed for 4 seconds
set -g display-time 4000

# Refresh 'status-left' and 'status-right' more often
set -g status-interval 5

# Set Zsh as your default Tmux shell
set-option -g default-shell /bin/zsh

# Enfore UTF-8 encoding
set -g utf8
set -g status-utf8 on
set-window-option -g utf8 on

# Make it pretty, use 256 colors
set -g default-terminal "screen-256color"

# Enable mouse motions
set -g mouse-utf8 on
set -g mouse on

# Address vim mode switching delay (http://superuser.com/a/252717/65504)
set -sg escape-time 0

# Set the numbering of windows to go from 1 instead of 0
set-option -g base-index 1
setw -g pane-base-index 1

# Don't rename windows automatically
set-option -g allow-rename off

# Enable windows renumbering
set -g renumber-windows on

# Set command history limit
set -g history-limit 50000

# Agressive panes rezise (useful when using "grouped sessions" and multi-monitor)
setw -g aggressive-resize on

#
# KEY BINDINGS
#

# Tmux uses a 'control key', let's set it to 'Ctrl-a'
set -g prefix C-a
unbind C-b

# Toggle status bar
bind-key b set -g status off
bind-key B set -g status on

# Swap current windows with window N
bind-key m command-prompt -p "swap with:" "swap-window -t %%"

# Reload Tmux configuration while using Tmux
bind R source-file ~/.tmux.conf \; display "Config Reloaded!"

# Use the vertical and horizontal symbols to split the screen
bind | split-window -h
bind - split-window -v

# Switch panes using Alt-arrow without prefix
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

# Use vim keybindings in copy mode
setw -g mode-keys vi
bind c copy-mode                    # `tmux prefix + c` starts copy mode
bind p paste-buffer                 # `prefix + p` pastes the latest buffer
bind -t vi-copy v begin-selection   # `v` begins a selection
# (.tmux-osx/linux.conf)            # Copy and paste are loaded from the OS specific files
bind -t vi-copy V rectangle-toggle  # `V` changes between line and columnwise selection
bind -t vi-copy Y copy-end-of-line  # Copy to end of line
bind + delete-buffer                # Delete buffer

# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Clear screen with ctrl + !
bind -n C-! send-keys -R \; send-keys C-l \;

# Easier and faster switching between next/prev window
bind C-p previous-window
bind C-n next-window

#
# PLUGINS
#

# Tmux powerline (https://powerline.readthedocs.org/en/latest/)
run-shell "powerline-daemon -q"
if-shell 'test -r "$POWERLINE_ROOT"' 'source "$POWERLINE_ROOT/bindings/tmux/powerline.conf"'

# Tmux Plugin Manager (https://github.com/tmux-plugins/tpm)
set -g @plugin 'tmux-plugins/tpm'
# Save/Load tmux sessions (https://github.com/tmux-plugins/tmux-resurrect/)
set -g @plugin 'tmux-plugins/tmux-resurrect'
# Auto Save/Load tmux sessions (https://github.com/tmux-plugins/tmux-continuum/)
set -g @plugin 'tmux-plugins/tmux-continuum'
# Enhances tmux search (https://github.com/tmux-plugins/tmux-copycat/)
set -g @plugin 'tmux-plugins/tmux-copycat'
# Enhances tmux copy mode (https://github.com/tmux-plugins/tmux-yank/)
set -g @plugin 'tmux-plugins/tmux-yank'
# Open highlighted text (documents, URL, etc.)(https://github.com/tmux-plugins/tmux-open)
set -g @plugin 'tmux-plugins/tmux-open'
# set -g @plugin 'seebi/tmux-colors-solarized'

# set -g @colors-solarized 'dark'

# tmux-continuum specific settings
# set -g @continuum-restore 'on'
# set -g @continuum-boot 'on'

# Run plugins
run '~/.tmux/plugins/tpm/tpm'
